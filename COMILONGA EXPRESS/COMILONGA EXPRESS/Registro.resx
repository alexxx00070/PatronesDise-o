<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /7EjX1//AXlMbJ0XPfsgAAAAAElFTkSuQmCC
</value>
  </data>
</root>